/*
 * SPDX-License-Identifier: GPL-2.0-only
 */

#include "ns3/applications-module.h"
#include "ns3/core-module.h"
#include "ns3/csma-module.h"
#include "ns3/internet-module.h"
#include "ns3/ipv4-global-routing-helper.h"
#include "ns3/network-module.h"
#include "ns3/point-to-point-module.h"
#include "ns3/netanim-module.h"

// Default Network Topology
//
//       10.53.1.0
// n0 -------------- n1   n2   n3   n4
//    point-to-point  |    |    |    |
//                    ================
//                      LAN 10.53.2.0

using namespace ns3;

NS_LOG_COMPONENT_DEFINE("SecondScriptExample");

int
main(int argc, char* argv[])
{
    bool verbose = true;
    uint32_t nCsma = 3;

    CommandLine cmd(__FILE__);
    cmd.AddValue("nCsma", "Number of \"extra\" CSMA nodes/devices", nCsma);
    cmd.AddValue("verbose", "Tell echo applications to log if true", verbose);

    cmd.Parse(argc, argv);

    if (verbose)
    {
        LogComponentEnable("UdpEchoClientApplication", LOG_LEVEL_INFO);
        LogComponentEnable("UdpEchoServerApplication", LOG_LEVEL_INFO);
    }

    nCsma = nCsma == 0 ? 1 : nCsma;

    NodeContainer p2pNodes;
    p2pNodes.Create(2);

    NodeContainer csmaNodes;
    csmaNodes.Add(p2pNodes.Get(1));
    csmaNodes.Create(nCsma);

    PointToPointHelper pointToPoint;
    pointToPoint.SetDeviceAttribute("DataRate", StringValue("5Mbps"));
    pointToPoint.SetChannelAttribute("Delay", StringValue("2ms"));

    NetDeviceContainer p2pDevices;
    p2pDevices = pointToPoint.Install(p2pNodes);

    CsmaHelper csma;
    csma.SetChannelAttribute("DataRate", StringValue("100Mbps"));
    csma.SetChannelAttribute("Delay", TimeValue(NanoSeconds(6560)));

    NetDeviceContainer csmaDevices;
    csmaDevices = csma.Install(csmaNodes);

    InternetStackHelper stack;
    stack.Install(p2pNodes.Get(0));
    stack.Install(csmaNodes);

    Ipv4AddressHelper address;
    address.SetBase("10.53.1.0", "255.255.255.0");
    Ipv4InterfaceContainer p2pInterfaces;
    p2pInterfaces = address.Assign(p2pDevices);

    address.SetBase("10.53.2.0", "255.255.255.0");
    Ipv4InterfaceContainer csmaInterfaces;
    csmaInterfaces = address.Assign(csmaDevices);

    UdpEchoServerHelper echoServer(8080);

    ApplicationContainer serverApps = echoServer.Install(csmaNodes.Get(3));
    serverApps.Start(Seconds(1.0));
    serverApps.Stop(Seconds(10.0));

    UdpEchoClientHelper echoClient(csmaInterfaces.GetAddress(3), 8080);
    echoClient.SetAttribute("MaxPackets", UintegerValue(1));
    echoClient.SetAttribute("Interval", TimeValue(Seconds(1.0)));
    echoClient.SetAttribute("PacketSize", UintegerValue(1024));

    ApplicationContainer clientApps1 = echoClient.Install(p2pNodes.Get(0));
    clientApps1.Start(Seconds(2.0));
    clientApps1.Stop(Seconds(10.0));
    
    ApplicationContainer clientApps2 = echoClient.Install(csmaNodes.Get(2));
    clientApps2.Start(Seconds(2.0));
    clientApps2.Stop(Seconds(10.0));

    Ipv4GlobalRoutingHelper::PopulateRoutingTables();

    pointToPoint.EnablePcapAll("second");
    csma.EnablePcap("second", csmaDevices.Get(1), true);

    AnimationInterface anim("second.xml");
    anim.SetConstantPosition(p2pNodes.Get(0),10.0,10.0);
    anim.SetConstantPosition(p2pNodes.Get(1),20.0,20.0);
    anim.SetConstantPosition(csmaNodes.Get(1),30.0,30.0);
    anim.SetConstantPosition(csmaNodes.Get(2),40.0,40.0);
    anim.SetConstantPosition(csmaNodes.Get(3),50.0,50.0);
    
    AsciiTraceHelper ascii;
    pointToPoint.EnableAsciiAll(ascii.CreateFileStream("point2point.tr"));
    csma.EnableAsciiAll(ascii.CreateFileStream("csma.tr"));

    Simulator::Run();
    Simulator::Destroy();
    return 0;
}

//#####################################################################


./ns3 run scratch/second.cc
./NetAnim
java -jar tracemetics.jar
wireshark second.pcap 


//###gnulines 

set terminal png size 600,700
set output "img1.png"
set xlabel "x label"
set ylabel "y label"

plot "data.txt" using 1:2 with linespoints lt 4 title "sdsd", \
     "data.txt" using 1:3 with linespoints lt 4 title "fgfg", \
     "data.txt" using 1:4 with linespoints lt 3 title "uiui"
     
     
//###gunhisto
set terminal pdf
set output "hist2.pdf"
set yrange [0:0.8]
set style fill solid
set style data histogram
set boxwidth 0.9
set xlabel "xlabel"
set ylabel "ylabel"

plot "datahisto.txt" using 2:xtic(1) title "i" lc 3, \
     "" using 3 title "i" lc 7, \
     
//###histo data
#	 i       ii 	iii
A 	0.28	0.21	o.65
B	0.26	0.22	0.68
C	0.51	0.47 	0.48
D 	0.28	0.26	0.71
E	0.37	0.34 	0.51
F	0.31	0.29	0.63
G	0.38	0.55	0.61


//### linesdata

No of days     speed     Age of driver    salary  
1              34.5          45           12000
2              36.4          34           24000
3              38.7          22           34000
4              32.3          20           40000
5              41.5          24           23456
6              35.6          36           12345
7              24.5          67           67678
8              56.7          54           32123
9              62.3          27           45678
10             65.4          33            8999